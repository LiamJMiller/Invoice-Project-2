{"id":"../node_modules/widest-line/index.js","dependencies":[{"name":"T:\\Invoice-Project-2\\invoice-project-2\\package.json","includedInParent":true,"mtime":1660575356891},{"name":"T:\\Invoice-Project-2\\invoice-project-2\\node_modules\\widest-line\\package.json","includedInParent":true,"mtime":1660575353795},{"name":"string-width","loc":{"line":2,"column":28,"index":42},"parent":"T:\\Invoice-Project-2\\invoice-project-2\\node_modules\\widest-line\\index.js","resolved":"T:\\Invoice-Project-2\\invoice-project-2\\node_modules\\string-width\\index.js"}],"generated":{"js":"'use strict';\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar stringWidth = require('string-width');\n\nvar widestLine = function widestLine(input) {\n  var max = 0;\n\n  var _iterator = _createForOfIteratorHelper(input.split('\\n')),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var line = _step.value;\n      max = Math.max(max, stringWidth(line));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return max;\n};\n\nmodule.exports = widestLine; // TODO: remove this in the next major version\n\nmodule.exports.default = widestLine;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/widest-line/index.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/widest-line/index.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":4},"source":"../node_modules/widest-line/index.js","original":{"line":2,"column":6},"name":"stringWidth"},{"generated":{"line":9,"column":15},"source":"../node_modules/widest-line/index.js","original":{"line":2,"column":17}},{"generated":{"line":9,"column":18},"source":"../node_modules/widest-line/index.js","original":{"line":2,"column":20},"name":"require"},{"generated":{"line":9,"column":25},"source":"../node_modules/widest-line/index.js","original":{"line":2,"column":27}},{"generated":{"line":9,"column":26},"source":"../node_modules/widest-line/index.js","original":{"line":2,"column":28}},{"generated":{"line":9,"column":40},"source":"../node_modules/widest-line/index.js","original":{"line":2,"column":27}},{"generated":{"line":9,"column":41},"source":"../node_modules/widest-line/index.js","original":{"line":2,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":4},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":6},"name":"widestLine"},{"generated":{"line":11,"column":14},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":16}},{"generated":{"line":11,"column":17},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":19}},{"generated":{"line":11,"column":26},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":6},"name":"widestLine"},{"generated":{"line":11,"column":36},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":19}},{"generated":{"line":11,"column":37},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":19},"name":"input"},{"generated":{"line":11,"column":42},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":24}},{"generated":{"line":11,"column":44},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":28}},{"generated":{"line":12,"column":2},"source":"../node_modules/widest-line/index.js","original":{"line":5,"column":1}},{"generated":{"line":12,"column":6},"source":"../node_modules/widest-line/index.js","original":{"line":5,"column":5},"name":"max"},{"generated":{"line":12,"column":9},"source":"../node_modules/widest-line/index.js","original":{"line":5,"column":8}},{"generated":{"line":12,"column":12},"source":"../node_modules/widest-line/index.js","original":{"line":5,"column":11}},{"generated":{"line":12,"column":13},"source":"../node_modules/widest-line/index.js","original":{"line":5,"column":1}},{"generated":{"line":14,"column":2},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":28}},{"generated":{"line":14,"column":45},"source":"../node_modules/widest-line/index.js","original":{"line":7,"column":20},"name":"input"},{"generated":{"line":14,"column":50},"source":"../node_modules/widest-line/index.js","original":{"line":7,"column":25}},{"generated":{"line":14,"column":51},"source":"../node_modules/widest-line/index.js","original":{"line":7,"column":26},"name":"split"},{"generated":{"line":14,"column":56},"source":"../node_modules/widest-line/index.js","original":{"line":7,"column":20}},{"generated":{"line":14,"column":57},"source":"../node_modules/widest-line/index.js","original":{"line":7,"column":32}},{"generated":{"line":14,"column":61},"source":"../node_modules/widest-line/index.js","original":{"line":7,"column":20}},{"generated":{"line":14,"column":62},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":28}},{"generated":{"line":15,"column":2},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":28}},{"generated":{"line":17,"column":2},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":28}},{"generated":{"line":18,"column":4},"source":"../node_modules/widest-line/index.js","original":{"line":7,"column":1}},{"generated":{"line":18,"column":56},"source":"../node_modules/widest-line/index.js","original":{"line":7,"column":39}},{"generated":{"line":19,"column":6},"source":"../node_modules/widest-line/index.js","original":{"line":7,"column":39}},{"generated":{"line":19,"column":10},"source":"../node_modules/widest-line/index.js","original":{"line":7,"column":12},"name":"line"},{"generated":{"line":19,"column":14},"source":"../node_modules/widest-line/index.js","original":{"line":7,"column":39}},{"generated":{"line":20,"column":6},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":2},"name":"max"},{"generated":{"line":20,"column":9},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":5}},{"generated":{"line":20,"column":12},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":8},"name":"Math"},{"generated":{"line":20,"column":16},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":12}},{"generated":{"line":20,"column":17},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":13},"name":"max"},{"generated":{"line":20,"column":20},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":8}},{"generated":{"line":20,"column":21},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":17},"name":"max"},{"generated":{"line":20,"column":24},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":8}},{"generated":{"line":20,"column":26},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":22},"name":"stringWidth"},{"generated":{"line":20,"column":37},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":33}},{"generated":{"line":20,"column":38},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":34},"name":"line"},{"generated":{"line":20,"column":42},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":33}},{"generated":{"line":20,"column":43},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":8}},{"generated":{"line":20,"column":44},"source":"../node_modules/widest-line/index.js","original":{"line":8,"column":2}},{"generated":{"line":21,"column":4},"source":"../node_modules/widest-line/index.js","original":{"line":9,"column":2}},{"generated":{"line":22,"column":2},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":28}},{"generated":{"line":23,"column":4},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":28}},{"generated":{"line":24,"column":2},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":28}},{"generated":{"line":25,"column":4},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":28}},{"generated":{"line":26,"column":2},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":28}},{"generated":{"line":28,"column":2},"source":"../node_modules/widest-line/index.js","original":{"line":11,"column":1}},{"generated":{"line":28,"column":9},"source":"../node_modules/widest-line/index.js","original":{"line":11,"column":8},"name":"max"},{"generated":{"line":28,"column":12},"source":"../node_modules/widest-line/index.js","original":{"line":11,"column":1}},{"generated":{"line":29,"column":0},"source":"../node_modules/widest-line/index.js","original":{"line":12,"column":1}},{"generated":{"line":29,"column":1},"source":"../node_modules/widest-line/index.js","original":{"line":4,"column":0}},{"generated":{"line":31,"column":0},"source":"../node_modules/widest-line/index.js","original":{"line":14,"column":0},"name":"module"},{"generated":{"line":31,"column":6},"source":"../node_modules/widest-line/index.js","original":{"line":14,"column":6}},{"generated":{"line":31,"column":7},"source":"../node_modules/widest-line/index.js","original":{"line":14,"column":7},"name":"exports"},{"generated":{"line":31,"column":14},"source":"../node_modules/widest-line/index.js","original":{"line":14,"column":0}},{"generated":{"line":31,"column":17},"source":"../node_modules/widest-line/index.js","original":{"line":14,"column":17},"name":"widestLine"},{"generated":{"line":31,"column":27},"source":"../node_modules/widest-line/index.js","original":{"line":14,"column":0}},{"generated":{"line":31,"column":29},"source":"../node_modules/widest-line/index.js","original":{"line":15,"column":0}},{"generated":{"line":33,"column":0},"source":"../node_modules/widest-line/index.js","original":{"line":16,"column":0},"name":"module"},{"generated":{"line":33,"column":6},"source":"../node_modules/widest-line/index.js","original":{"line":16,"column":6}},{"generated":{"line":33,"column":7},"source":"../node_modules/widest-line/index.js","original":{"line":16,"column":7},"name":"exports"},{"generated":{"line":33,"column":14},"source":"../node_modules/widest-line/index.js","original":{"line":16,"column":0}},{"generated":{"line":33,"column":15},"source":"../node_modules/widest-line/index.js","original":{"line":16,"column":15},"name":"default"},{"generated":{"line":33,"column":22},"source":"../node_modules/widest-line/index.js","original":{"line":16,"column":0}},{"generated":{"line":33,"column":25},"source":"../node_modules/widest-line/index.js","original":{"line":16,"column":25},"name":"widestLine"},{"generated":{"line":33,"column":35},"source":"../node_modules/widest-line/index.js","original":{"line":16,"column":0}}],"sources":{"../node_modules/widest-line/index.js":"'use strict';\nconst stringWidth = require('string-width');\n\nconst widestLine = input => {\n\tlet max = 0;\n\n\tfor (const line of input.split('\\n')) {\n\t\tmax = Math.max(max, stringWidth(line));\n\t}\n\n\treturn max;\n};\n\nmodule.exports = widestLine;\n// TODO: remove this in the next major version\nmodule.exports.default = widestLine;\n"},"lineCount":null}},"error":null,"hash":"b3fae38a2eef7fda524f1eb5d4b11053","cacheData":{"env":{}}}